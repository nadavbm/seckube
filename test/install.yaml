apiVersion: v1
kind: Namespace
metadata:
  name: seckube
  labels:
    name: seckube
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: seckube
  namespace: seckube
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: seckube
  namespace: seckube
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "create"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "create", "update", "delete", "watch"]
  - apiGroups: ["seckube.eba.com"]
    resources: ["secrets"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: seckube
  namespace: seckube
subjects:
  - kind: ServiceAccount
    name: seckube
    namespace: seckube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: seckube
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: secrets.seckube.eba.com
spec:
  group: seckube.eba.com
  names:
    kind: Secret
    listKind: SecretList
    plural: secrets
    singular: secret
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Secret is the Schema for the secrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretSpec defines the desired state of Secret
            properties:
              data:
                additionalProperties:
                  type: string
                description: 'Data is the secret data set as map of keys and values,
                  e.g { pg_username: "skibe", pg_password: ""} similar to the key
                  / value pairs of kuberenetes secret. if a value string is empty
                  string, seckube will generate the value.'
                type: object
              name:
                description: Name is the secret name as stored in kubernetes
                type: string
              rotation:
                description: Rotation decides if the secret should be rotated or static
                type: boolean
              sharedData:
                items:
                  description: SharedData secrets values that is being shared by few
                    secret the value could be shared only if it's an empty string
                    in all secrets.
                  properties:
                    secretDataKeys:
                      items:
                        type: string
                      type: array
                    secretNames:
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            type: object
          status:
            description: SecretStatus defines the observed state of Secret
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seckube
  namespace: seckube
spec:
  selector:
    matchLabels:
      name: seckube
  replicas: 1
  template:
    metadata:
      labels:
        name: seckube
    spec:
      serviceAccountName: seckube
      containers:
        - name: seckube
          image: nadavbm/seckube:v0.0.1
          command:
            - /seckube
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi